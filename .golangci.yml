# golangci-lint configuration
# https://golangci-lint.run/usage/configuration/

run:
  timeout: 5m
  tests: true
  modules-download-mode: readonly

linters:
  enable:
    - errcheck # Check for unchecked errors
    - gosimple # Simplify code
    - govet # Reports suspicious constructs
    - ineffassign # Detect ineffectual assignments
    - staticcheck # Advanced Go linting
    - unused # Check for unused constants, variables, functions and types
    - gofmt # Check formatting
    - goimports # Check imports
    - misspell # Find commonly misspelled words
    - gocritic # Comprehensive Go source code linter
    - revive # Fast, configurable, extensible, flexible, and beautiful linter
    - gosec # Security-focused linter
    - unconvert # Remove unnecessary type conversions
    - unparam # Report unused function parameters
    - prealloc # Find slice declarations that could potentially be preallocated
    - exportloopref # Check for pointers to enclosing loop variables
    - errorlint # Find misuses of errors

linters-settings:
  errcheck:
    check-type-assertions: true
    check-blank: true

  govet:
    enable-all: true

  gofmt:
    simplify: true

  gocritic:
    enabled-tags:
      - diagnostic
      - style
      - performance
      - experimental
      - opinionated

  revive:
    severity: warning
    rules:
      - name: exported
        severity: warning
      - name: unexported-return
        disabled: true
      - name: package-comments
        disabled: true

  gosec:
    excludes:
      - G104 # Audit errors not checked (we use errcheck for this)
    severity: medium
    confidence: medium

  staticcheck:
    checks: ["all"]

issues:
  exclude-use-default: false
  max-issues-per-linter: 0
  max-same-issues: 0

  # Exclude some linters from running on tests files
  exclude-rules:
    - path: _test\.go
      linters:
        - gosec
        - errcheck
        - gocritic
